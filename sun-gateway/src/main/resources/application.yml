server:
  port: 8061
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8091/eureka/
  instance:
    prefer-ip-address: true
    instance-id:
      ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
spring:
  profiles:
    active: gateway-server

---
spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lowerCaseServiceId: true
      routes:
      - id: service-provider
        uri: lb://SERVICE-PROVIDER
        predicates:
        - Path=/demo/**
        filters:
        - StripPrefix=1
      - id: service-fegn
        uri: lb://SERVICE-FEIGN
        predicates:
        - Path=/demo1/**
        filters:i
        - StripPrefix=1
  profiles: gateway-server
---
#spring:
#  cloud:
#    gateway:
#      routes:
#      - id: limit_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - After=2017-01-20T17:42:47.789-07:00[America/Denver]
#        filters:
#        - name: RequestRateLimiter
#          args:
#            key-resolver: '#{@hostAddrKeyResolver}'
#            redis-rate-limiter.replenishRate: 1
#            redis-rate-limiter.burstCapacity: 3
#  application:
#    name: gateway-limiter
#  redis:
#    host: 192.168.233.134
#    port: 6379
#    database: 0
---

spring:
  cloud:
    gateway:
      routes:
      - id: after_route
        uri: http://example.org
        filters:
        #- AddRequestHeader=X-Request-Foo, Bar
        - RequestTime=true
        predicates:
        - After=2017-01-20T17:42:47.789-07:00[America/Denver]
  profiles: after_route

---
spring:
  cloud:
    gateway:
      routes:
      - id: header_route
        uri: https://www.baidu.com
        predicates:
        - Header=X-Request-Id, \d+
  profiles: header_route

---
spring:
  cloud:
    gateway:
      routes:
      - id: cookie_route
        uri: https://www.baidu.com
        predicates:
        - Cookie=token, 123456
  profiles: cookie_route

---
spring:
  cloud:
    gateway:
      routes:
      - id: host_route
        uri: https://www.baidu.com
        predicates:
        - Host=**.baidu.com
  profiles: host_route

---
spring:
  cloud:
    gateway:
      routes:
      - id: method_route
        uri: https://www.baidu.com
        predicates:
        - Method=POST
  profiles: method_route

---
spring:
  cloud:
    gateway:
      routes:
      - id: path_route
        uri: https://blog.csdn.net
        predicates:
        #- Path=/gateway/{segment}
        - Path=/foo/**
        filters: #过滤重新功能
        - RewritePath=/foo/(?<segment>.*), /$\{segment}
  profiles: path_route

---
spring:
  cloud:
    gateway:
      routes:
      - id: query_route
        uri: https://www.baidu.com
        predicates:
        - Query=param,good.
  profiles: query_route